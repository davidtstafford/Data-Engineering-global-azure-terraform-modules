[tool.poetry]
name = "azure-terraform-modules"
version = "0.1.0"
description = "Reusable Terraform modules for Azure data engineering platforms"
authors = ["David Stafford"]
readme = "README.md"
packages = [{include = "scripts"}]

[tool.poetry.dependencies]
python = "^3.9"
click = "^8.1.0"
pyyaml = "^6.0"
rich = "^13.0.0"
jinja2 = "^3.1.0"
pytest = "^7.4.0"
black = "^24.3.0"
isort = "^5.12.0"
flake8 = "^6.0.0"
mypy = "^1.5.0"
pre-commit = "^3.4.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.11.0"
checkov = "^2.4.0"

[tool.poetry.group.dev.dependencies]
bandit = "^1.8.3"
safety = "^2.3.0"
python-terraform = "^0.10.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["scripts"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
]
